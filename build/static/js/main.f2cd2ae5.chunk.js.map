{"version":3,"sources":["components/TopNav.jsx","components/MovieSearch.jsx","components/MovieList.jsx","helpers/Ajax.js","Movie.jsx","Movies.jsx","WatchLater.jsx","App.js","serviceWorker.js","index.js"],"names":["TopNav","props","className","exact","to","activeClassName","MovieSearch","state","searchTerm","handleChange","bind","handleSubmit","handleKeyDown","e","this","setState","target","value","searchMovies","key","type","placeholder","onChange","onKeyDown","onClick","React","Component","MovieList","movies","map","m","id","src","poster_path","alt","title","Date","release_date","getFullYear","overview","watchLater","indexOf","saveToWatchLater","size","deleteFromWatchLater","get","url","urlencode","send","post","data","put","delete","requestType","length","qs","stringify","Promise","resolve","reject","axios","defaults","headers","token","document","querySelector","getAttribute","err","console","log","withCredentials","toLowerCase","then","response","catch","error","status","window","location","href","validationErrors","errors","request","message","config","Movie","heading","Ajax","res","movieId","push","setWatchLater","filter","localStorage","setItem","JSON","getItem","parse","getWatchLater","results","style","width","Movies","WatchLater","App","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f2cd2ae5.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { NavLink, Link } from \"react-router-dom\";\n\nconst TopNav = props => (\n  <div className=\"box header\">\n    <div className=\"header-logo\">\n      <Link exact=\"true\" to=\"/demos/movie-search/\">\n        Movie Search\n      </Link>\n    </div>\n    <div>\n      <nav>\n        <ul>\n          <li>\n            <NavLink\n              to=\"/demos/movie-search/watch-later\"\n              activeClassName=\"top-nav-active\"\n            >\n              <span>Watchlist</span>\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  </div>\n);\n\nexport default TopNav;\n","import React from \"react\";\n\nclass MovieSearch extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchTerm: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ searchTerm: e.target.value });\n  }\n\n  handleSubmit() {\n    this.props.searchMovies(this.state.searchTerm);\n  }\n\n  handleKeyDown(e) {\n    if (e.key !== \"Enter\") return;\n    this.handleSubmit();\n  }\n\n  render() {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Search title\"\n          onChange={this.handleChange}\n          onKeyDown={this.handleKeyDown}\n        />\n        <button onClick={this.handleSubmit}>search</button>\n      </div>\n    );\n  }\n}\n\nexport default MovieSearch;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { MdDone, MdAdd } from \"react-icons/md\";\n\nclass MovieList extends React.Component {\n  render() {\n    return (\n      <div className=\"movie-list-wrapper\">\n        <ul className=\"movie-list\">\n          {this.props.movies.map(m => {\n            // console.log(m.id);\n            return (\n              <li key={m.id}>\n                <div className=\"poster-wrapper\">\n                  <img\n                    src={`https://image.tmdb.org/t/p/w200/${m.poster_path}`}\n                    alt={`${m.title} movie poster`}\n                  />\n                </div>\n                <div>\n                  <h3>\n                    {m.title}{\" \"}\n                    <small>({new Date(m.release_date).getFullYear()})</small>\n                  </h3>\n                  <p>{m.overview}</p>\n                  <div className=\"movie-list-item-more\">\n                    <Link to=\"/\">more</Link>\n                    <span className=\"more-gradient\"></span>\n                  </div>\n                </div>\n                <div>\n                  {this.props.watchLater.indexOf(m.id) === -1 ? (\n                    <div\n                      className=\"watch-later-btn\"\n                      onClick={() => this.props.saveToWatchLater(m.id)}\n                    >\n                      <MdAdd size={25} />\n                    </div>\n                  ) : (\n                    <div\n                      className=\"watch-later-btn saved\"\n                      onClick={() => this.props.deleteFromWatchLater(m.id)}\n                    >\n                      <MdDone size={25} />\n                    </div>\n                  )}\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default MovieList;\n","import axios from \"axios\";\nimport qs from \"qs\";\n\nexport default {\n  /**\n   * Send a Get request.\n   *\n   * @param {object} data\n   */\n  get(url, urlencode = true) {\n    return this.send(url, \"get\", {}, urlencode);\n  },\n\n  /**\n   * Send a POST request.\n   *\n   * @param {object} data\n   */\n  post(url, data, urlencode = true) {\n    return this.send(url, \"post\", data, urlencode);\n  },\n\n  /**\n   * Send a PUT request.\n   *\n   * @param {object} data\n   */\n  put(url, data, urlencode = true) {\n    return this.send(url, \"put\", data, urlencode);\n  },\n\n  /**\n   * Send a DELETE request.\n   *\n   * @param {object} data\n   */\n  delete(url, data, urlencode = true) {\n    return this.send(url, \"delete\", data, urlencode);\n    // Note: When sending 'params' instead of data, Axios will add ?id=177 to this.url. (If you data is {id: 177}).\n    // And then if using Express you can get the params in the query (req.query.id).\n  },\n\n  send(url, requestType, data = {}, urlencode = true) {\n    if (data.length > 0 && urlencode === true) {\n      data = qs.stringify(data);\n    }\n\n    return new Promise((resolve, reject) => {\n      axios.defaults.headers[\"X-Requested-With\"] = \"XMLHttpRequest\"; // Tell server that this is a ajax request.\n      try {\n        const token = document\n          .querySelector('meta[name=\"csrf-token\"]')\n          .getAttribute(\"content\");\n        if (token) {\n          axios.defaults.headers[\"CSRF-Token\"] = token;\n        }\n      } catch (err) {\n        console.log(\"No csrf token found. \", err);\n      }\n\n      axios.defaults.withCredentials = true; // Send cookie to server.\n      axios[requestType.toLowerCase()](url, data)\n        .then(response => resolve(response.data))\n        .catch(error => {\n          if (error.response) {\n            // The request was made and the server responded with a status code\n            // that falls out of the range of 2xx\n            // console.log(error.response.data);\n            // console.log(error.response.status);\n            // console.log(error.response.headers);\n\n            // If server session expired then just redirect to login page.\n            const status = error.response.status;\n            if (status === 401 || status === 403 || status === 419) {\n              console.log(\"Ajax error: \", error);\n              window.location.href = \"/login\";\n              return;\n            } else if (status === 422) {\n              reject({ validationErrors: error.response.data.errors });\n            } else {\n              reject(error.response.data);\n            }\n          } else if (error.request) {\n            // The request was made but no response was received\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n            // http.ClientRequest in node.js\n            console.log(error.request);\n          } else {\n            // Something happened in setting up the request that triggered an Error\n            console.log(\"Error\", error.message);\n          }\n          console.log(error.config);\n        });\n    });\n  }\n};\n","import React from \"react\";\n\nimport MovieSearch from \"./components/MovieSearch\";\nimport MovieList from \"./components/MovieList\";\n\nimport Ajax from \"./helpers/Ajax\";\n\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      movies: [],\n      heading: \"Popular movies\",\n      watchLater: []\n    };\n\n    this.searchMovies = this.searchMovies.bind(this);\n    this.saveToWatchLater = this.saveToWatchLater.bind(this);\n    this.deleteFromWatchLater = this.deleteFromWatchLater.bind(this);\n  }\n\n  searchMovies(searchTerm) {\n    this.setState({ movies: [], heading: \"Searching...\" });\n    Ajax.post(\"/movies/search\", { searchTerm })\n      .then(res => {\n        if (typeof res.movies != \"undefined\") {\n          this.setState({\n            movies: res.movies,\n            heading: `Search results (${res.movies.length})`\n          });\n        }\n      })\n      .catch(err => {\n        this.setState({ heading: \"An error ocurred.\" });\n        console.log(err);\n      });\n  }\n\n  saveToWatchLater(movieId) {\n    let watchLater = [...this.state.watchLater];\n    watchLater.push(movieId);\n\n    this.setState({ watchLater });\n    // Ajax.post(`/watchlist`, { movie_id: movieId }).catch(err =>\n    //   console.log(err)\n    // );\n\n    this.setWatchLater(watchLater);\n  }\n\n  deleteFromWatchLater(movieId) {\n    let watchLater = this.state.watchLater.filter(id => id !== movieId);\n    this.setState({ watchLater });\n    this.setWatchLater(watchLater);\n    // Ajax.delete(`/watchlist/${movieId}`).catch(err => console.log(err));\n  }\n\n  setWatchLater(watchLater) {\n    window.localStorage.setItem(\"watchLater\", JSON.stringify(watchLater));\n  }\n\n  getWatchLater() {\n    let watchLater = window.localStorage.getItem(\"watchLater\");\n    return watchLater === null ? [] : JSON.parse(watchLater);\n  }\n\n  componentDidMount() {\n    this.setState({ heading: \"Loading...\", watchLater: this.getWatchLater() });\n    Ajax.get(\"/demos/movie-search/data/movies/popular.json\")\n      .then(res => {\n        if (typeof res.results != \"undefined\") {\n          this.setState({\n            movies: res.results,\n            heading: \"Popular movies\"\n          });\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div style={{ width: \"100%\" }}>\n        <MovieSearch searchMovies={this.searchMovies} />\n        <h1 className=\"heading\">{this.state.heading}</h1>\n        <MovieList\n          movies={this.state.movies}\n          watchLater={this.state.watchLater}\n          saveToWatchLater={this.saveToWatchLater}\n          deleteFromWatchLater={this.deleteFromWatchLater}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n","import React from 'react';\n\nimport MovieSearch from './components/MovieSearch';\nimport MovieList from './components/MovieList';\n\nimport Ajax from './helpers/Ajax';\n\nimport Movie from './Movie';\n\nclass Movies extends Movie {\n\n}\n\nexport default Movies;","import React from \"react\";\n\nimport MovieList from \"./components/MovieList\";\n\nimport Ajax from \"./helpers/Ajax\";\n\nimport Movie from \"./Movie\";\n\nclass WatchLater extends Movie {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      watchLater: [],\n      movies: [],\n      heading: \"Watch later\"\n    };\n\n    this.deleteFromWatchLater = this.deleteFromWatchLater.bind(this);\n  }\n\n  componentDidMount() {\n    const watchLater = this.getWatchLater();\n    this.setState({ heading: \"Loading...\", watchLater });\n    Ajax.get(\"/demos/movie-search/data/movies/popular.json\")\n      .then(res => {\n        if (typeof res.results != \"undefined\") {\n          this.setState({\n            movies: res.results.filter(m => watchLater.indexOf(m.id) !== -1),\n            heading: \"Watch later\"\n          });\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"heading\">{this.state.heading}</h1>\n        {!this.state.movies.length && this.state.heading !== \"Loading...\" ? (\n          <p className=\"empty-watchlist-notification\">\n            You have not added any movies yet.\n          </p>\n        ) : (\n          \"\"\n        )}\n        <MovieList\n          movies={this.state.movies}\n          watchLater={this.state.watchLater}\n          saveToWatchLater={this.saveToWatchLater}\n          deleteFromWatchLater={this.deleteFromWatchLater}\n        />\n      </div>\n    );\n  }\n}\n\nexport default WatchLater;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  NavLink,\n  Link\n} from \"react-router-dom\";\n\n// import { FaClock, FaChartBar, FaRegFolder, FaUser, FaTags, FaSignOutAlt, FaPowerOff } from 'react-icons/fa';\nimport \"./sass/app.scss\";\n\nimport TopNav from \"./components/TopNav\";\nimport Movies from \"./Movies\";\nimport WatchLater from \"./WatchLater\";\n// import withMovies from \"./components/withMovies\";\n\n// const WatchLaterWithMovies = withMovies(WatchLater);\n\nconst logout = () => (window.location = \"/logout\");\n\nif (window.localStorage.getItem(\"watchLater\") === null) {\n  window.localStorage.setItem(\"watchLater\", \"[]\");\n}\n\nconst App = () => (\n  <Router>\n    <div className=\"wrapper\">\n      <TopNav />\n      <div className=\"box content\">\n        <Route exact path=\"/demos/movie-search/\" component={Movies} />\n        <Route path=\"/demos/movie-search/watch-later\" component={WatchLater} />\n      </div>\n      <div className=\"box footer\"></div>\n    </div>\n  </Router>\n);\n\nexport default App;\n// ReactDOM.render(<App />, document.getElementById('app'));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}